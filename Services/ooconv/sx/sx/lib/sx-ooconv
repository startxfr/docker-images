#!/bin/bash
source $SX_LIBDIR/sx

function check_ooconv_environment {
    if [ ! -v DATA_PATH ]; then
        DATA_PATH="/data"
        export DATA_PATH
    fi
}

function ooconvInformation {
    displayInformation $1
    echoVerbose $1 "version   : $SX_VERSION"
    echoVerbose $1 "unoconv   : $(unoconv --version | tail -1)"
    echoVerbose $1 "data path : $DATA_PATH"
}

function displayOOconvRunInformation {
    ooconvInformation $1
}

# function executed when build hook is called
function ooconvBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv BUILD"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    doInitS2iApp
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "Build application logic found at $MYS2I_DEST/assemble"
        testAndRunSourceCodeScript "assemble" 
    else
        echoVerbose "No Build application logic found at $MYS2I_DEST/assemble"
    doOoconvBuild
    fi
    exit 0;
}

# function performing Ooconv build actions
function doOoconvBuild {
    doGenericBuild
    echoNotVerbose "Executing Ooconv build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Ooconv build logic"
    echoVerbose "+====================================================="
}

# function executed when post-build hook is called
function ooconvPostBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv POST-BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv POST-BUILD"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "PostBuild application logic found at $MYS2I_DEST/post-build"
        testAndRunSourceCodeScript "post-build" 
    else
        echoVerbose "No PostBuild application logic found at $MYS2I_DEST/post-build"
    doOoconvPostBuild
    fi
    exit 0;
}

# function performing Ooconv post-build actions
function doOoconvPostBuild {
    doGenericPostBuild
    echoNotVerbose "Executing Ooconv post-build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Ooconv post-build logic"
    echoVerbose "+====================================================="
}

# function executed when pre-deploy hook is called
function ooconvPreDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv PRE-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv PRE-DEPLOY"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/pre-deploy ]]; then
        echoVerbose "PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
        testAndRunSourceCodeScript "pre-deploy" 
    else
        echoVerbose "No PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
    doOoconvPreDeploy
    fi
    exit 0;
}

# function performing Ooconv pre-deploy actions
function doOoconvPreDeploy {
    doGenericPreDeploy
    echoNotVerbose "Executing Ooconv pre-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Ooconv pre-deploy logic"
    echoVerbose "+====================================================="
}

# function executed when post-deploy hook is called
function ooconvPostDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv POST-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv POST-DEPLOY"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/post-deploy ]]; then
        echoVerbose "PostDeploy application logic found at $MYS2I_DEST/post-deploy"
        testAndRunSourceCodeScript "post-deploy" 
    else
        echoVerbose "No PostDeploy application logic found at $MYS2I_DEST/post-deploy"
    doOoconvPostDeploy
    fi
    exit 0;
}

# function performing Ooconv post-deploy actions
function doOoconvPostDeploy {
    doGenericPostDeploy
    echoNotVerbose "Executing Ooconv post-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Ooconv post-deploy logic"
    echoVerbose "+====================================================="
}

# function executed on container startup
function ooconvRun {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv RUN"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv RUN"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/run ]]; then
        echoVerbose "Run application logic found at $MYS2I_DEST/run"
        testAndRunSourceCodeScript "run" 
    else
        echoVerbose "No Run application logic found at $MYS2I_DEST/run"
        echoVerbose "Executing default Ooconv run action"
        doOoconvRun
    fi
}

# function performing Ooconv run actions
function doOoconvRun {
    echoNotVerbose "Executing Ooconv run logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Ooconv run logic"
    echoVerbose "+====================================================="
    startOOconvService
}

# Display liveness status
function ooconvIsLive {
    genericIsLive
}

# Display readyness status
function ooconvIsReady {
    genericIsReady
}

function stopOoconvHandler {
    killall unoconv soffice.bin 
    stopDaemon
}

# Start the ooconv server as a deamon and execute it inside 
# the running shell
function startOOconvService {
    trap 'stopOoconvHandler' SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGTRAP SIGBUS SIGUSR1 SIGUSR2 SIGFPE SIGPIPE SIGALRM SIGSTOP
    trap 'killDaemon kill 9' SIGKILL
    trap 'killDaemon term 15' SIGTERM
    trap 'killDaemon sys 31' SIGSYS
    if [ "$SX_DEBUG" = true ] ; then
        unoconv --listener -vvv
    else
        unoconv --listener
    fi 
    killall unoconv soffice.bin 
    exec unoconv --listener
}