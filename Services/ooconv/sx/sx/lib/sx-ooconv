#!/bin/bash
source $SX_LIBDIR/sx

function check_ooconv_environment {
    if [ ! -v DATA_PATH ]; then
        DATA_PATH="/data"
        export DATA_PATH
    fi
}

function ooconvInformation {
    displayInformation $1
    echoVerbose $1 "version   : $SX_VERSION"
    echoVerbose $1 "unoconv   : $(unoconv --version | tail -1)"
    echoVerbose $1 "data path : $DATA_PATH"
}

function displayOOconvRunInformation {
    ooconvInformation $1
}

# function executed when build hook is called
function ooconvBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv BUILD"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doOoconvBuild
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "Build source code found at $MYS2I_DEST/assemble"
        testAndRunSourceCodeScript "assemble" 
    else
        echoVerbose "No Build source code found at $MYS2I_DEST/assemble"
    fi
    exit 0;
}

# function performing Ooconv build actions
function doOoconvBuild {
    doGenericBuild
    echoNotVerbose "Build Ooconv"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "| Build Ooconv"
    echoVerbose "+====================================================="
}

# function executed when post-build hook is called
function ooconvPostBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv POST-BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv POST-BUILD"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doOoconvPostBuild
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "PostBuild source code found at $MYS2I_DEST/post-build"
        testAndRunSourceCodeScript "post-build" 
    else
        echoVerbose "No PostBuild source code found at $MYS2I_DEST/post-build"
    fi
    exit 0;
}

# function performing Ooconv post-build actions
function doOoconvPostBuild {
    doGenericPostBuild
    echoNotVerbose "PostBuild Ooconv"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "| PostBuild Ooconv"
    echoVerbose "+====================================================="
}

# function executed when pre-deploy hook is called
function ooconvPreDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv PRE-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv PRE-DEPLOY"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doOoconvPreDeploy
    if [[ -x $MYS2I_DEST/pre-deploy ]]; then
        echoVerbose "PreDeploy source code found at $MYS2I_DEST/pre-deploy"
        testAndRunSourceCodeScript "pre-deploy" 
    else
        echoVerbose "No PreDeploy source code found at $MYS2I_DEST/pre-deploy"
    fi
    exit 0;
}

# function performing Ooconv pre-deploy actions
function doOoconvPreDeploy {
    doGenericPreDeploy
    echoNotVerbose "PreDeploy Ooconv"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "| PreDeploy Ooconv"
    echoVerbose "+====================================================="
}

# function executed when post-deploy hook is called
function ooconvPostDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv POST-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv POST-DEPLOY"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doOoconvPostDeploy
    if [[ -x $MYS2I_DEST/post-deploy ]]; then
        echoVerbose "PostDeploy source code found at $MYS2I_DEST/post-deploy"
        testAndRunSourceCodeScript "post-deploy" 
    else
        echoVerbose "No PostDeploy source code found at $MYS2I_DEST/post-deploy"
    fi
    exit 0;
}

# function performing Ooconv post-deploy actions
function doOoconvPostDeploy {
    doGenericPostDeploy
    echoNotVerbose "PostDeploy Ooconv"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "| PostDeploy Ooconv"
    echoVerbose "+====================================================="
}

# function executed on container startup
function ooconvRun {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Ooconv RUN"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Ooconv RUN"
    echoVerbose "| "
    ooconvInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    if [[ -x $MYS2I_DEST/run ]]; then
        echoVerbose "Run source code found at $MYS2I_DEST/run"
        testAndRunSourceCodeScript "run" 
    else
        echoVerbose "No Run source code found at $MYS2I_DEST/run"
        echoVerbose "Executing default Ooconv run action"
        doOoconvRun
    fi
}

# function performing Ooconv run actions
function doOoconvRun {
    echoNotVerbose "Run Ooconv"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "| Run Ooconv"
    echoVerbose "+====================================================="
    startOOconvService
}

# Display liveness status
function ooconvIsLive {
    genericIsLive
}

# Display readyness status
function ooconvIsReady {
    genericIsReady
}

function stop_ooconv_handler {
    killall unoconv soffice.bin 
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME is now STOPPED"
    echoNotVerbose "container is now stopped"
    echoVerbose "| "
    ooconvInformation "| "
    echoVerbose "+====================================================="
    exit 143; # 128 + 15 -- SIGTERM
}

# Start the ooconv server as a deamon and execute it inside 
# the running shell
function startOOconvService {
    trap 'kill ${!}; stop_ooconv_handler' SIGHUP SIGINT SIGQUIT SIGTERM SIGKILL SIGSTOP SIGCONT
    if [ "$SX_DEBUG" = true ] ; then
        unoconv --listener -vvv
    else
        unoconv --listener
    fi 
    killall unoconv soffice.bin 
    exec unoconv --listener
}