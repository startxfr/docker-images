#!/bin/bash
source $SX_LIBDIR/sx

function check_nodejs_environment {
    if [ ! -v APP_PATH ]; then
        APP_PATH="/app"
        export APP_PATH
    fi
    if [ ! -v APP_MAIN ]; then
        APP_MAIN="app.js"
        export APP_MAIN
    fi
    if [ ! -v DATA_PATH ]; then
        DATA_PATH="/data"
        export DATA_PATH
    fi
    if [ ! -v LOG_PATH ]; then
        LOG_PATH="/logs"
        export LOG_PATH
    fi
}

# Display nodejs information
function nodejsInformation {
    displayInformation $1 
    echoVerbose $1 "app path  : $APP_PATH"
    echoVerbose $1 "log path  : $LOG_PATH"
    echoVerbose $1 "data path : $DATA_PATH"
    echoVerbose $1 "node      : $(node -v | head -1)" 
    echoVerbose $1 "npm       : $(npm -v | head -1)" 
}

# function executed when pre-deploy hook is called
function nodejsPreDeploy {
    genericHeader
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME  running PRE-DEPLOY HOOK"
    echoNotVerbose "container $HOSTNAME  running PRE-DEPLOY HOOK"
    echoVerbose "| "
    nodejsInformation "| "
    echoVerbose "+====================================================="
    testAndRunSourceCodeScript "pre-deploy" 
}

# function executed when post-deploy hook is called
function nodejsPostDeploy {
    genericHeader
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME  running POST-DEPLOY HOOK"
    echoNotVerbose "container $HOSTNAME  running POST-DEPLOY HOOK"
    echoVerbose "| "
    nodejsInformation "| "
    echoVerbose "+====================================================="
    testAndRunSourceCodeScript "post-deploy" 
}

# function executed when pre-build hook is called
function nodejsPostBuild {
    genericHeader
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME  running POST-BUILD HOOK"
    echoNotVerbose "container $HOSTNAME  running POST-BUILD HOOK"
    echoVerbose "| "
    nodejsInformation "| "
    echoVerbose "+====================================================="
    testAndRunSourceCodeScript "post-build" 
}

# function executed when assemble hook is called
function nodejsAssemble {
    genericHeader
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME  running ASSEMBLE"
    echoNotVerbose "container $HOSTNAME  running ASSEMBLE"
    echoVerbose "| "
    nodejsInformation "| "
    echoVerbose "+====================================================="
    if [[ -d $S2I_DEST ]]; then
      echoVerbose "Fixing perm on $S2I_DEST"
      chown 1001:0 -R $S2I_DEST
      chmod g=u -R $S2I_DEST
      moveSourceCode $S2I_DEST $APP_PATH
    fi;
    testAndRunSourceCodeScript "assemble" 
    npmInstallEnvironement
}

# function executed on container startup
function nodejsRun {
    genericHeader
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME is RUNNING"
    echoNotVerbose "container $HOSTNAME is RUNNING"
    echoVerbose "| "
    nodejsInformation "| "
    echoVerbose "+====================================================="
    if [ ! -d "$APP_PATH/node_modules" ]; then
        npmInstallEnvironement
    fi
    startNodejsService
}

# Display liveness status
function nodejsIsLive {
    genericIsLive
}

# Display readyness status
function nodejsIsReady {
    genericIsReady
}


# function executed on nodejs service stop
function stop_nodejs_handler {
    killall node
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME is now STOPPED"
    echoNotVerbose "container is now stopped"
    echoVerbose "| "
    nodejsInformation "| "
    echoVerbose "+====================================================="
    exit 143; # 128 + 15 -- SIGTERM
}

# Start the httpd server as a deamon and execute it inside 
# the running shell
function startNodejsService {
    cd $APP_PATH
    trap 'kill ${!}; stop_nodejs_handler' SIGHUP SIGINT SIGQUIT SIGTERM SIGKILL SIGSTOP SIGCONT
    if [ ! -d "$APP_PATH/node_modules" ]; then
        npmInstallEnvironement
    fi
    exec npm start
}

# Start the httpd server as a deamon and execute it inside 
# the running shell
function npmInstallEnvironement {
    cd $APP_PATH
    npm install -production
    npm dedupe
    npm cache verify
    npm cache clean --force
    cd -
}