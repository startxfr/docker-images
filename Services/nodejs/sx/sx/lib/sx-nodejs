#!/bin/bash
source $SX_LIBDIR/sx

function check_nodejs_environment {
    if [ ! -v APP_PATH ]; then
        APP_PATH="/app"
        export APP_PATH
    fi
    if [ ! -v APP_MAIN ]; then
        APP_MAIN="app.js"
        export APP_MAIN
    fi
    if [ ! -v DATA_PATH ]; then
        DATA_PATH="/data"
        export DATA_PATH
    fi
    if [ ! -v LOG_PATH ]; then
        LOG_PATH="/logs"
        export LOG_PATH
    fi
}

# Display nodejs information
function nodejsInformation {
    displayInformation $1 
    echoVerbose $1 "app path  : $APP_PATH"
    echoVerbose $1 "log path  : $LOG_PATH"
    echoVerbose $1 "data path : $DATA_PATH"
    echoVerbose $1 "node      : $(node -v | head -1)" 
    echoVerbose $1 "npm       : $(npm -v | head -1)" 
}

# function executed when build hook is called
function nodejsBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs BUILD"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doNodejsBuild
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "Build source code found at $MYS2I_DEST/assemble"
        testAndRunSourceCodeScript "assemble" 
    else
        echoVerbose "No Build source code found at $MYS2I_DEST/assemble"
    fi
    exit 0;
}

# function performing Nodejs build actions
function doNodejsBuild {
    doGenericBuild
    echoNotVerbose "Build Nodejs actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "Build Nodejs actions"
    echoVerbose "+====================================================="
    npmInstallEnvironement
}

# function executed when post-build hook is called
function nodejsPostBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs POST-BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs POST-BUILD"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doNodejsPostBuild
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "PostBuild source code found at $MYS2I_DEST/post-build"
        testAndRunSourceCodeScript "post-build" 
    else
        echoVerbose "No PostBuild source code found at $MYS2I_DEST/post-build"
    fi
    exit 0;
}

# function performing Nodejs post-build actions
function doNodejsPostBuild {
    doGenericPostBuild
    echoNotVerbose "PostBuild Nodejs actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "PostBuild Nodejs actions"
    echoVerbose "+====================================================="
    npmInstallEnvironement
}

# function executed when pre-deploy hook is called
function nodejsPreDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs PRE-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs PRE-DEPLOY"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doNodejsPreDeploy
    if [[ -x $MYS2I_DEST/pre-deploy ]]; then
        echoVerbose "PreDeploy source code found at $MYS2I_DEST/pre-deploy"
        testAndRunSourceCodeScript "pre-deploy" 
    else
        echoVerbose "No PreDeploy source code found at $MYS2I_DEST/pre-deploy"
    fi
    exit 0;
}

# function performing Nodejs pre-deploy actions
function doNodejsPreDeploy {
    doGenericPreDeploy
    echoNotVerbose "PreDeploy Nodejs actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "PreDeploy Nodejs actions"
    echoVerbose "+====================================================="
}

# function executed when post-deploy hook is called
function nodejsPostDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs POST-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs POST-DEPLOY"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doNodejsPostDeploy
    if [[ -x $MYS2I_DEST/post-deploy ]]; then
        echoVerbose "PostDeploy source code found at $MYS2I_DEST/post-deploy"
        testAndRunSourceCodeScript "post-deploy" 
    else
        echoVerbose "No PostDeploy source code found at $MYS2I_DEST/post-deploy"
    fi
    exit 0;
}

# function performing Nodejs post-deploy actions
function doNodejsPostDeploy {
    doGenericPostDeploy
    echoNotVerbose "PostDeploy Nodejs actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "PostDeploy Nodejs actions"
    echoVerbose "+====================================================="
}

# function executed on container startup
function nodejsRun {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs RUN"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs RUN"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    if [[ -x $MYS2I_DEST/run ]]; then
        echoVerbose "Run source code found at $MYS2I_DEST/run"
        testAndRunSourceCodeScript "run" 
    else
        echoVerbose "No Run source code found at $MYS2I_DEST/run"
        echoVerbose "Executing default Nodejs run action"
        doNodejsRun
    fi
}

# function performing Nodejs run actions
function doNodejsRun {
    echoNotVerbose "Run Nodejs"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "Run Nodejs"
    echoVerbose "+====================================================="
    if [ ! -d "$APP_PATH/node_modules" ]; then
        npmInstallEnvironement
    fi
    startNodejsService
}

# Display liveness status
function nodejsIsLive {
    genericIsLive
}

# Display readyness status
function nodejsIsReady {
    genericIsReady
}


# function executed on nodejs service stop
function stop_nodejs_handler {
    killall node
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME is now STOPPED"
    echoNotVerbose "container is now stopped"
    echoVerbose "| "
    nodejsInformation "| "
    echoVerbose "+====================================================="
    exit 143; # 128 + 15 -- SIGTERM
}

# Start the httpd server as a deamon and execute it inside 
# the running shell
function startNodejsService {
    cd $APP_PATH
    trap 'kill ${!}; stop_nodejs_handler' SIGHUP SIGINT SIGQUIT SIGTERM SIGKILL SIGSTOP SIGCONT
    if [ ! -d "$APP_PATH/node_modules" ]; then
        npmInstallEnvironement
    fi
    exec npm start
}

# Start the httpd server as a deamon and execute it inside 
# the running shell
function npmInstallEnvironement {
    cd $APP_PATH
    npm install -production
    npm dedupe
    npm cache verify
    npm cache clean --force
    cd -
}