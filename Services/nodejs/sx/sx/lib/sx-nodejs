#!/bin/bash
source $SX_LIBDIR/sx

function check_nodejs_environment {
    if [ ! -v APP_PATH ]; then
        APP_PATH="/app"
        export APP_PATH
    fi
    if [ ! -v APP_MAIN ]; then
        APP_MAIN="app.js"
        export APP_MAIN
    fi
    if [ ! -v DATA_PATH ]; then
        DATA_PATH="/data"
        export DATA_PATH
    fi
    if [ ! -v LOG_PATH ]; then
        LOG_PATH="/var/log/nodejs"
        export LOG_PATH
    fi
}

# Display nodejs information
function nodejsInformation {
    displayInformation $1 
    echoVerbose $1 "app path  : $APP_PATH"
    echoVerbose $1 "log path  : $LOG_PATH"
    echoVerbose $1 "data path : $DATA_PATH"
    echoVerbose $1 "node      : $(node -v | head -1)" 
    echoVerbose $1 "npm       : $(npm -v | head -1)" 
}

# function executed when build hook is called
function nodejsBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs BUILD"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    doInitS2iApp
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "Build application logic found at $MYS2I_DEST/assemble"
        testAndRunSourceCodeScript "assemble" 
    else
        echoVerbose "No Build application logic found at $MYS2I_DEST/assemble"
    doNodejsBuild
    fi
    exit 0;
}

# function performing Nodejs build actions
function doNodejsBuild {
    doGenericBuild
    echoNotVerbose "Executing Nodejs build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Nodejs build logic"
    echoVerbose "+====================================================="
    npmInstallEnvironement
}

# function executed when post-build hook is called
function nodejsPostBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs POST-BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs POST-BUILD"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "PostBuild application logic found at $MYS2I_DEST/post-build"
        testAndRunSourceCodeScript "post-build" 
    else
        echoVerbose "No PostBuild application logic found at $MYS2I_DEST/post-build"
    doNodejsPostBuild
    fi
    exit 0;
}

# function performing Nodejs post-build actions
function doNodejsPostBuild {
    doGenericPostBuild
    echoNotVerbose "Executing Nodejs post-build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Nodejs post-build logic"
    echoVerbose "+====================================================="
    npmInstallEnvironement
}

# function executed when pre-deploy hook is called
function nodejsPreDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs PRE-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs PRE-DEPLOY"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/pre-deploy ]]; then
        echoVerbose "PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
        testAndRunSourceCodeScript "pre-deploy" 
    else
        echoVerbose "No PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
    doNodejsPreDeploy
    fi
    exit 0;
}

# function performing Nodejs pre-deploy actions
function doNodejsPreDeploy {
    doGenericPreDeploy
    echoNotVerbose "Executing Nodejs pre-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Nodejs pre-deploy logic"
    echoVerbose "+====================================================="
}

# function executed when post-deploy hook is called
function nodejsPostDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs POST-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs POST-DEPLOY"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/post-deploy ]]; then
        echoVerbose "PostDeploy application logic found at $MYS2I_DEST/post-deploy"
        testAndRunSourceCodeScript "post-deploy" 
    else
        echoVerbose "No PostDeploy application logic found at $MYS2I_DEST/post-deploy"
    doNodejsPostDeploy
    fi
    exit 0;
}

# function performing Nodejs post-deploy actions
function doNodejsPostDeploy {
    doGenericPostDeploy
    echoNotVerbose "Executing Nodejs post-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Nodejs post-deploy logic"
    echoVerbose "+====================================================="
}

# function executed on container startup
function nodejsRun {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Nodejs RUN"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Nodejs RUN"
    echoVerbose "| "
    nodejsInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/run ]]; then
        echoVerbose "Run application logic found at $MYS2I_DEST/run"
        testAndRunSourceCodeScript "run" 
    else
        echoVerbose "No Run application logic found at $MYS2I_DEST/run"
        echoVerbose "Executing default Nodejs run action"
        doNodejsRun
    fi
}

# function performing Nodejs run actions
function doNodejsRun {
    echoNotVerbose "Executing Nodejs run logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Nodejs run logic"
    echoVerbose "+====================================================="
    if [ ! -d "$APP_PATH/node_modules" ]; then
        npmInstallEnvironement
    fi
    startNodejsService
}

# Display liveness status
function nodejsIsLive {
    genericIsLive
}

# Display readyness status
function nodejsIsReady {
    genericIsReady
}


# function executed on nodejs service stop
function stopNodejsHandler {
    killall node
    stopDaemon
}

# Start the httpd server as a deamon and execute it inside 
# the running shell
function startNodejsService {
    cd $APP_PATH
    trap 'stopNodejsHandler' SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGTRAP SIGBUS SIGUSR1 SIGUSR2 SIGFPE SIGPIPE SIGALRM SIGSTOP
    trap 'killDaemon kill 9' SIGKILL
    trap 'killDaemon term 15' SIGTERM
    trap 'killDaemon sys 31' SIGSYS
    if [ ! -d "$APP_PATH/node_modules" ]; then
        npmInstallEnvironement
    fi
    exec npm start
}

# Start the httpd server as a deamon and execute it inside 
# the running shell
function npmInstallEnvironement {
    cd $APP_PATH
    npm install -production
    npm dedupe
    npm cache verify
    npm cache clean --force
    cd -
}