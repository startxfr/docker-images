---
kind: Template
apiVersion: v1
metadata:
  name: startx-nodejs-deploy-template
  annotations:
    openshift.io/display-name: Startx MicroWeb Server (ephemeral deploy workflow)
    description: Deployement workflow of a micro-web application using ephemeral storage
      for logs records. Use nodejs with various underlying linux distribution. See 
      https://hub.docker.com/r/startx/sv-nodejs
    iconClass: icon-nodejs
    tags: startx,os,fedora,nodejs,httpd
    openshift.io/provider-display-name: STARTX
    openshift.io/documentation-url: https://hub.docker.com/r/startx/sv-nodejs
    openshift.io/support-url: https://github.com/startxfr/docker-images/issues/new
message: |-
  Your application ${APP_NAME} is deploying and will be soon deployed.
  Monitor the deployement for application availability

  Application : ${APP_NAME}
  Stage       : ${APP_STAGE}
  Image       : startx/sv-nodejs:${BUILDER_TAG}
  Volumes     : ${APP_NAME}-log (E), ${APP_NAME}-data (E)
  
  Connection  : http://${APP_NAME}:8080
  
labels:
  template: startx-nodejs-deploy-template
  provider: startx 
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    annotations:
      openshift.io/display-name: Startx Micro-WebServer for application ${APP_NAME}
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
  spec:
    tags:
    - name: fc26
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Fedora 26)
        description: Lightweight Http server builder for micro-web application running under
          Fedora 26
        iconClass: icon-nodejs
        tags: builder,startx,fedora,nodejs,httpd
        supports: http
        version: fc26
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:fc26
    - name: fc27
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Fedora 27)
        description: Lightweight Http server builder for micro-web application running under
          Fedora 27
        iconClass: icon-nodejs
        tags: builder,startx,fedora,nodejs,httpd
        supports: http
        version: fc27
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:fc27
    - name: fc28
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Fedora 28)
        description: Lightweight Http server builder for micro-web application running under
          Fedora 28
        iconClass: icon-nodejs
        tags: builder,startx,fedora,nodejs,httpd
        supports: http
        version: fc28
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:fc28
    - name: fc29
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Fedora 29)
        description: Lightweight Http server builder for micro-web application running under
          Fedora 29
        iconClass: icon-nodejs
        tags: builder,startx,fedora,nodejs,httpd
        supports: http
        version: fc29
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:fc29
    - name: fc30
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Fedora 30)
        description: Lightweight Http server builder for micro-web application running under
          Fedora 30
        iconClass: icon-nodejs
        tags: builder,startx,fedora,nodejs,httpd
        supports: http
        version: fc30
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:fc30
    - name: rawhide
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Fedora rawhide)
        description: Lightweight Http server builder for micro-web application running under
          Fedora rawhide
        iconClass: icon-nodejs
        tags: builder,startx,fedora,nodejs,httpd
        supports: http
        version: rawhide
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:latest
    - name: centos7
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Centos 7)
        description: Lightweight Http server builder for micro-web application running under
          Centos 7
        iconClass: icon-nodejs
        tags: builder,startx,centos,nodejs,httpd
        supports: http
        version: '7'
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:centos7
    - name: centos6
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Centos 6)
        description: Lightweight Http server builder for micro-web application running under
          Centos 6
        iconClass: icon-nodejs
        tags: builder,startx,centos,nodejs,httpd
        supports: http
        version: '7'
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:centos6
    - name: alpine3
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (Alpine 3)
        description: Lightweight Http server builder for micro-web application running under
          Alpine 3
        iconClass: icon-nodejs
        tags: builder,startx,alpine,nodejs,httpd
        supports: http
        version: '3'
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: DockerImage
        name: startx/sv-nodejs:alpine3
    - name: latest
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (latest)
        description: Lightweight Http server builder for micro-web application running under
          Fedora latest
        iconClass: icon-nodejs
        tags: builder,startx,alpine,nodejs,httpd
        supports: http
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: ImageStreamTag
        name: rawhide
    - name: dev
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (dev)
        description: Lightweight Http server builder for micro-web application (developpement)
        iconClass: icon-nodejs
        tags: builder,startx,alpine,nodejs,httpd
        supports: http
        version: 'dev'
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: ImageStreamTag
        name: rawhide
    - name: test
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (test)
        description: Lightweight Http server builder for micro-web application (testing)
        iconClass: icon-nodejs
        tags: builder,startx,alpine,nodejs,httpd
        supports: http
        version: 'test'
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: ImageStreamTag
        name: centos7
    - name: preprod
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (preprod)
        description: Lightweight Http server builder for micro-web application (pre-production)
        iconClass: icon-nodejs
        tags: builder,startx,alpine,nodejs,httpd
        supports: http
        version: 'pre-prod'
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: ImageStreamTag
        name: alpine3
    - name: prod
      annotations:
        openshift.io/display-name: S2I Startx Micro-WebServer (prod)
        description: Lightweight Http server builder for micro-web application (production)
        iconClass: icon-nodejs
        tags: builder,startx,alpine,nodejs,httpd
        supports: http
        version: 'prod'
        sampleRepo: https://github.com/startxfr/docker-images-example-nodejs.git
      from:
        kind: ImageStreamTag
        name: alpine3
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-config"
    annotations:
      openshift.io/display-name: Application ${APP_NAME} configuration
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
  data:
    SX_ID: ${APP_NAME}/${APP_STAGE}
    SX_TYPE: ${APP_STAGE}
    SX_SERVICE: ${APP_NAME}
    SX_NAME: Static web application ${APP_NAME}
    SX_SUMMARY: Static web application ${APP_NAME} based on fedora container
    SX_VERSION: 0.0.1 
    APP_PATH: "${APP_PATH}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
    annotations:
      openshift.io/generated-by: STARTX
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 40
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APP_NAME}"
        from:
          kind: ImageStreamTag
          name: "${APP_NAME}:${IMAGE_STAGE}"
    - type: ConfigChange
    postCommit:
      script: "/bin/sx-nodejs info"
    replicas: 1
    test: false
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    template:
      metadata:
        labels:
          app: "${APP_NAME}"
          provider: startx
          template: startx-nodejs-deploy-template
          deploymentconfig: "${APP_NAME}"
        annotations:
          openshift.io/generated-by: STARTX
      spec:
        containers:
        - name: "${APP_NAME}"
          image: " "
          env:
          - name: SX_VERBOSE
            value: 'true'
          envFrom:
            - configMapRef:
                name: ${APP_NAME}-config
          command:
          - "/bin/sx-nodejs"
          args:
          - run
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            exec:
              command:
              - "/bin/sx-nodejs"
              - isLive
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - "/bin/sx-nodejs"
              - isReady
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 1000m
              memory: 256Mi
            requests:
              cpu: 500m
              memory: 128Mi
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          volumeMounts:
          - name: "${APP_NAME}-log"
            mountPath: "/var/log/httpd"
        volumes:
        - name: "${APP_NAME}-log"
          emptyDir:
            medium: ''
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        securityContext: {}
        dnsPolicy: ClusterFirst
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
    annotations:
      openshift.io/generated-by: STARTX
  spec:
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    type: ClusterIP
    sessionAffinity: None
- kind: Route
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
    annotations:
      openshift.io/generated-by: STARTX
  spec:
    to:
      kind: Service
      name: "${APP_NAME}"
      weight: 100
parameters:
- name: APP_NAME
  displayName: Application name
  description: The name of the created application
  value: nodejs
  required: true
- name: APP_STAGE
  displayName: Application stage
  description: "Stage of the application deployed (ex: dev, test, prod, example, demo, poc, ...)"
  value: example
  required: true
- name: IMAGE_STAGE
  displayName: Image stage
  description: "Stage of the base image used (ex: dev, test, preprod, prod, latest, rawhide, fc30, alpine3, centos6, centos7, fc29, fc28, ...)"
  value: latest
  required: true
- name: APP_PATH
  displayName: Path to the application
  description: Container path to the application. Could be a mounted directory with
    your web content. Default is /app as defined in the startx/sv-nodejs content.
  value: "/app"
  required: true
