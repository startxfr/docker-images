kind: Template
apiVersion: v1
metadata:
  name: startx-sv-mariadb-build-persist-template
  annotations:
    openshift.io/display-name: Startx Mariadb Server (persistent)
    description: Mariadb server for simple SQL database with persistent storage
    iconClass: icon-mariadb
    tags: startx,os,fedora,mariadb,sql
    openshift.io/long-description: This template provides an mariadb SQL database server
      in a fedora container. Ready to use in openshift with a simple deployement config,
      or as a s2i builder for building SQL database container. For more information
      about using this image, including OpenShift considerations, see https://github.com/startxfr/docker-images/blob/master/README.md.
    openshift.io/provider-display-name: STARTX
    openshift.io/documentation-url: https://github.com/startxfr/docker-images/blob/master/README.md
    openshift.io/support-url: https://github.com/startxfr/docker-images/issues/new
message: |-
  Your persistent database ${APP_NAME} is building and will be soon deployed...

         Username: ${MYSQL_USER}
         Password: ${MYSQL_PASSWORD}
    Database Name: ${MYSQL_DATABASE}
   Connection URL: mysql://${APP_NAME}:3306
labels:
  template: startx-sv-mariadb-build-persist-template
  provider: startx 
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: startx-sv-mariadb
    annotations:
      openshift.io/display-name: Startx MariadbServer
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
  spec:
    tags:
    - name: latest
      annotations:
        openshift.io/display-name: Startx MariadbServer (Fedora rawhide)
        description: Mariadb server for simple SQL database running under Fedora rawhide
        iconClass: icon-mariadb
        tags: builder,startx,fedora,mariadb,sql
        supports: mysql
        version: latest
        sampleRepo: https://github.com/startxfr/docker-images-example-mariadb.git
      from:
        kind: DockerImage
        name: startx/sv-mariadb:latest
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    annotations:
      openshift.io/display-name: Database ${APP_NAME}
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
  spec:
    tags:
    - name: latest
      annotations:
        openshift.io/display-name: Database ${APP_NAME}
        description: Base image for the database ${APP_NAME}
        iconClass: icon-mariadb
        tags: startx,fedora,mariadb,sql,database,${APP_NAME}
        supports: mysql
        version: latest
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-config"
    annotations:
      openshift.io/display-name: Database ${APP_NAME} configuration
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
  data:
    SX_ID: ${APP_NAME}/${APP_STAGE}
    SX_TYPE: ${APP_STAGE}
    SX_SERVICE: ${APP_NAME}
    SX_NAME: SQL database ${APP_NAME}
    SX_SUMMARY: SQL database ${APP_NAME} based on fedora container
    SX_VERSION: 0.0.1 
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-auth"
    creationTimestamp: 
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
    annotations:
      template.openshift.io/expose-username: "{.data['MYSQL_USER']}"
      template.openshift.io/expose-password: "{.data['MYSQL_PASSWORD']}"
      template.openshift.io/expose-root_password: "{.data['MYSQL_PASSWORD']}"
  stringData:
    MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    MYSQL_USER: "${MYSQL_USER}"
    MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-data"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-log"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
    annotations:
      openshift.io/generated-by: STARTX
  spec:
    triggers:
    - type: GitHub
      github:
        secret: "${WEBHOOK_TOKEN}_${APP_NAME}"
    - type: Generic
      generic:
        secret: "${WEBHOOK_TOKEN}_${APP_NAME}"
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
    runPolicy: SerialLatestOnly
    source:
      type: Git
      git:
        uri: "${SOURCE_GIT}"
        ref: "${SOURCE_BRANCH}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: startx-sv-mariadb:latest
        env:
        - name: SX_VERBOSE
          value: 'true'
    output:
      to:
        kind: ImageStreamTag
        name: "${APP_NAME}:latest"
    resources: {}
    postCommit:
      command:
      - "/bin/sx-mariadb"
      - post-build
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
    annotations:
      openshift.io/generated-by: STARTX
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 20
        pre:
          failurePolicy: Abort
          execNewPod:
            containerName: "${APP_NAME}"
            command:
            - "/bin/sx-mariadb"
            - pre-deploy
            env:
            - name: SX_VERBOSE
              value: 'true'
            - name: SX_DEBUG
              value: 'true'
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-auth"
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-auth"
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-auth"
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              value: "${MYSQL_DATABASE}"
            envFrom:
              - configMapRef:
                  name: ${APP_NAME}-config
        post:
          failurePolicy: Abort
          execNewPod:
            containerName: "${APP_NAME}"
            command:
            - "/bin/sx-mariadb"
            - post-deploy
            env:
            - name: SX_VERBOSE
              value: 'true'
            - name: SX_DEBUG
              value: 'true'
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-auth"
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-auth"
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-auth"
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              value: "${MYSQL_DATABASE}"
            envFrom:
              - configMapRef:
                  name: ${APP_NAME}-config
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APP_NAME}"
        from:
          kind: ImageStreamTag
          name: "${APP_NAME}:latest"
    - type: ConfigChange
    postCommit:
      script: "/bin/sx-mariadb info"
    replicas: 1
    test: false
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    template:
      metadata:
        labels:
          app: "${APP_NAME}"
          deploymentconfig: "${APP_NAME}"
        annotations:
          openshift.io/generated-by: STARTX
      spec:
        containers:
        - name: "${APP_NAME}"
          image: " "
          env:
          - name: SX_VERBOSE
            value: 'true'
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${APP_NAME}-auth"
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: "${APP_NAME}-auth"
                key: MYSQL_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${APP_NAME}-auth"
                key: MYSQL_PASSWORD
          - name: MYSQL_DATABASE
            value: "${MYSQL_DATABASE}"
          envFrom:
            - configMapRef:
                name: ${APP_NAME}-config
          command:
          - "/bin/sx-mariadb"
          args:
          - run
          ports:
          - containerPort: 3306
            protocol: TCP
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          livenessProbe:
            exec:
              command:
              - "/bin/sx-mariadb"
              - isLive
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - "/bin/sx-mariadb"
              - isReady
            initialDelaySeconds: 2
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          volumeMounts:
          - name: "${APP_NAME}-log"
            mountPath: "/var/log/mariadb"
          - name: "${APP_NAME}-data"
            mountPath: "/data"
        volumes:
        - name: "${APP_NAME}-log"
          persistentVolumeClaim:
            claimName: "${APP_NAME}-log"
        - name: "${APP_NAME}-data"
          persistentVolumeClaim:
            claimName: "${APP_NAME}-data"
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        securityContext: {}
        dnsPolicy: ClusterFirst
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
    annotations:
      openshift.io/generated-by: STARTX
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
  spec:
    ports:
    - name: mysql
      protocol: TCP
      port: 3306
      targetPort: 3306
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    type: ClusterIP
    sessionAffinity: None
parameters:
- name: APP_NAME
  displayName: Database name
  description: The name of the created database
  value: mariadb
  required: true
- name: APP_STAGE
  displayName: Database stage
  description: "Stage of the database deployed (ex: dev, test, prod, example, demo, poc, ...)"
  value: example
  required: true
- name: SOURCE_GIT
  displayName: Source repository
  description: URL to the source code to use during build process
  value: https://github.com/startxfr/docker-images-example-mariadb.git
  required: true
- name: SOURCE_BRANCH
  displayName: Source branch
  description: Name of the default branch
  value: master
  required: true
- name: WEBHOOK_TOKEN
  displayName: Webhook token
  description: Secret token to use for webhook to github or generic
  generate: expression
  from: "[a-zA-Z0-9]{24}"
  required: true
- name: RUN_ACTION
  displayName: Main action to perfom
  description: Action to perform for this running Pod. Should be one of build, post-build,
    pre-deploy, post-deploy, run, isLive, isReady, usage, usageS2i, daemon, info,
    version. See documentation for action list.
  value: run
  required: true
- name: MYSQL_ROOT_PASSWORD
  displayName: Mysql root password
  description: The mysql root password to use. Generated if not provided
  from: "[A-Z0-9]{16}"
  generate: expression
- name: MYSQL_USER
  displayName: Mysql user
  description: Default user to create
  value: demo
  from: "[A-Z0-9]{8}"
  generate: expression
- name: MYSQL_PASSWORD
  displayName: Mysql password
  description: Password of the default user
  value: demo
  from: "[A-Z0-9]{16}"
  generate: expression
- name: MYSQL_DATABASE
  displayName: Mysql database
  description: name of the default database to create
  value: example
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  value: 512Mi
  required: true
- name: VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 512Mi, 2Gi.
  value: 1Gi
  required: true
