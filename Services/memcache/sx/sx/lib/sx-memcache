#!/bin/bash
source $SX_LIBDIR/sx

function check_memcache_environment {
    if [ ! -v LOG_PATH ]; then
        LOG_PATH="/var/log/sx"
        export LOG_PATH
    fi
}

function memcacheInformation {
    displayInformation $1
    echoVerbose $1 "version   : $SX_VERSION"
    echoVerbose $1 "memcache  : $(memcached -h | head -1)"
    echoVerbose $1 "log path  : $LOG_PATH"
}

function displayMemcacheRunInformation {
    memcacheInformation $1
    echoVerbose $1 "admin     : root:$MYSQL_ROOT_PASSWORD"
    echo $1 "user      : $MYSQL_USER:$MYSQL_PASSWORD"
    echo $1 "database  : $MYSQL_DATABASE"
}

# function executed when build hook is called
function memcacheBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Memcache BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Memcache BUILD"
    echoVerbose "| "
    memcacheInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "Build application logic found at $MYS2I_DEST/assemble"
        testAndRunSourceCodeScript "assemble" 
    else
        echoVerbose "No Build application logic found at $MYS2I_DEST/assemble"
        doMemcacheBuild
    fi
    exit 0;
}

# function performing Memcache build actions
function doMemcacheBuild {
    doGenericBuild
    echoNotVerbose "Executing Memcache build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Memcache build logic"
    echoVerbose "+====================================================="
}

# function executed when post-build hook is called
function memcachePostBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Memcache POST-BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Memcache POST-BUILD"
    echoVerbose "| "
    memcacheInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "PostBuild application logic found at $MYS2I_DEST/post-build"
        testAndRunSourceCodeScript "post-build" 
    else
        echoVerbose "No PostBuild application logic found at $MYS2I_DEST/post-build"
    doMemcachePostBuild
    fi
    exit 0;
}

# function performing Memcache post-build actions
function doMemcachePostBuild {
    doGenericPostBuild
    echoNotVerbose "Executing Memcache post-build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Memcache post-build logic"
    echoVerbose "+====================================================="
}

# function executed when pre-deploy hook is called
function memcachePreDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Memcache PRE-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Memcache PRE-DEPLOY"
    echoVerbose "| "
    memcacheInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/pre-deploy ]]; then
        echoVerbose "PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
        testAndRunSourceCodeScript "pre-deploy" 
    else
        echoVerbose "No PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
    doMemcachePreDeploy
    fi
    exit 0;
}

# function performing Memcache pre-deploy actions
function doMemcachePreDeploy {
    doGenericPreDeploy
    echoNotVerbose "Executing Memcache pre-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Memcache pre-deploy logic"
    echoVerbose "+====================================================="
}

# function executed when post-deploy hook is called
function memcachePostDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Memcache POST-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Memcache POST-DEPLOY"
    echoVerbose "| "
    memcacheInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/post-deploy ]]; then
        echoVerbose "PostDeploy application logic found at $MYS2I_DEST/post-deploy"
        testAndRunSourceCodeScript "post-deploy" 
    else
        echoVerbose "No PostDeploy application logic found at $MYS2I_DEST/post-deploy"
    doMemcachePostDeploy
    fi
    exit 0;
}

# function performing Memcache post-deploy actions
function doMemcachePostDeploy {
    doGenericPostDeploy
    echoNotVerbose "Executing Memcache post-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Memcache post-deploy logic"
    echoVerbose "+====================================================="
}

# function executed on container startup
function memcacheRun {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Memcache RUN"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Memcache RUN"
    echoVerbose "| "
    memcacheInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/run ]]; then
        echoVerbose "Run application logic found at $MYS2I_DEST/run"
        testAndRunSourceCodeScript "run" 
    else
        echoVerbose "No Run application logic found at $MYS2I_DEST/run"
        echoVerbose "Executing default Memcache run action"
        doMemcacheRun
    fi
}

# function performing Memcache run actions
function doMemcacheRun {
    echoNotVerbose "Executing Memcache run logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Memcache run logic"
    echoVerbose "+====================================================="
    startMemcacheService
}

# Display liveness status
function memcacheIsLive {
    genericIsLive
}

# Display readyness status
function memcacheIsReady {
    genericIsReady
}

function stopMemcacheHandler {
    killall memcached
    stopDaemon
}

# Start the memcache server as a deamon and execute it inside 
# the running shell
function startMemcacheService {
    trap 'stopMemcacheHandler' SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGTRAP SIGBUS SIGUSR1 SIGUSR2 SIGFPE SIGPIPE SIGALRM SIGSTOP
    trap 'killDaemon kill 9' SIGKILL
    trap 'killDaemon term 15' SIGTERM
    trap 'killDaemon sys 31' SIGSYS
    exec memcached -u daemon -v
}
