#!/bin/bash
source $SX_LIBDIR/sx-apache

# Display php information
function phpInformation {
    apacheInformation $1 
    echoVerbose $1 "php       : $(php --version | head -1)" 
}

# function executed when build hook is called
function phpBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Php BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Php BUILD"
    echoVerbose "| "
    phpInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "Build application logic found at $MYS2I_DEST/assemble"
        testAndRunSourceCodeScript "assemble" 
    else
        echoVerbose "No Build application logic found at $MYS2I_DEST/assemble"
    doPhpBuild
    fi
    exit 0;
}

# function performing Php build actions
function doPhpBuild {
    doApacheBuild
    echoNotVerbose "Executing Php build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Php build logic"
    echoVerbose "+====================================================="
}

# function executed when post-build hook is called
function phpPostBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Php POST-BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Php POST-BUILD"
    echoVerbose "| "
    phpInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "PostBuild application logic found at $MYS2I_DEST/post-build"
        testAndRunSourceCodeScript "post-build" 
    else
        echoVerbose "No PostBuild application logic found at $MYS2I_DEST/post-build"
    doPhpPostBuild
    fi
    exit 0;
}

# function performing Php post-build actions
function doPhpPostBuild {
    doApachePostBuild
    echoNotVerbose "Executing Php post-build logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Php post-build logic"
    echoVerbose "+====================================================="
}

# function executed when pre-deploy hook is called
function phpPreDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Php PRE-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Php PRE-DEPLOY"
    echoVerbose "| "
    phpInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/pre-deploy ]]; then
        echoVerbose "PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
        testAndRunSourceCodeScript "pre-deploy" 
    else
        echoVerbose "No PreDeploy application logic found at $MYS2I_DEST/pre-deploy"
    doPhpPreDeploy
    fi
    exit 0;
}

# function performing Php pre-deploy actions
function doPhpPreDeploy {
    doApachePreDeploy
    echoNotVerbose "Executing Php pre-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Php pre-deploy logic"
    echoVerbose "+====================================================="
}

# function executed when post-deploy hook is called
function phpPostDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Php POST-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Php POST-DEPLOY"
    echoVerbose "| "
    phpInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/post-deploy ]]; then
        echoVerbose "PostDeploy application logic found at $MYS2I_DEST/post-deploy"
        testAndRunSourceCodeScript "post-deploy" 
    else
        echoVerbose "No PostDeploy application logic found at $MYS2I_DEST/post-deploy"
    doPhpPostDeploy
    fi
    exit 0;
}

# function performing Php post-deploy actions
function doPhpPostDeploy {
    doApachePostDeploy
    echoNotVerbose "Executing Php post-deploy logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Php post-deploy logic"
    echoVerbose "+====================================================="
}

# function executed on container startup
function phpRun {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Php RUN"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Php RUN"
    echoVerbose "| "
    phpInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    echoVerbose ""
    if [[ -x $MYS2I_DEST/run ]]; then
        echoVerbose "Run application logic found at $MYS2I_DEST/run"
        testAndRunSourceCodeScript "run" 
    else
        echoVerbose "No Run application logic found at $MYS2I_DEST/run"
        echoVerbose "Executing default Php run action"
        doPhpRun
    fi
}

# function performing Php run actions
function doPhpRun {
    echoNotVerbose "Executing Php run logic"
    echoVerbose "+====================================================="
    echoVerbose "| Executing Php run logic"
    echoVerbose "+====================================================="
    startPhpService
}

function startPhpService {
    preStartApacheService
    if [[ -x /usr/sbin/php-fpm ]]; then
      echoVerbose "starting php-fpm process"
      /usr/sbin/php-fpm -D
    elif [[ -x /usr/sbin/php-fpm7 ]]; then
      echoVerbose "starting php-fpm process"
      /usr/sbin/php-fpm7 -D
    fi;
    touch /var/log/php-fpm/error.log
    if [[ -r /var/log/php-fpm/error.log ]]; then
      echoVerbose "Display php-fpm logs from /var/log/php-fpm/error.log"
      tail -f /var/log/php-fpm/error.log &
    fi;
    startApacheService
}

# Display liveness status
function phpIsLive {
    apacheIsLive
}

# Display readyness status
function phpIsReady {
    apacheIsReady
}
