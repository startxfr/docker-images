#!/bin/bash
source $SX_LIBDIR/sx

function check_couchbase_environment {
    if [ ! -v DATA_PATH ]; then
        DATA_PATH="/data"
        export DATA_PATH
    fi
    if [ ! -v LOG_PATH ]; then
        LOG_PATH="/logs"
        export LOG_PATH
    fi
}

function couchbaseInformation {
    displayInformation $1
    echoVerbose $1 "version   : $SX_VERSION"
    echoVerbose $1 "engine    : v$CB_VERSION"
    echoVerbose $1 "log path  : $LOG_PATH"
    echoVerbose $1 "data path : $DATA_PATH"
}

function displayCouchbaseRunInformation {
    couchbaseInformation $1
    echoVerbose $1 "admin     : $COUCHBASE_USER:$COUCHBASE_PASSWORD"
    echo $1 "database  : $COUCHBASE_BUCKETS"
}

# function executed when build hook is called
function couchbaseBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Couchbase BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Couchbase BUILD"
    echoVerbose "| "
    couchbaseInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doCouchbaseBuild
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "Build source code found at $MYS2I_DEST/assemble"
        testAndRunSourceCodeScript "assemble" 
    else
        echoVerbose "No Build source code found at $MYS2I_DEST/assemble"
    fi
    exit 0;
}

# function performing Couchbase build actions
function doCouchbaseBuild {
    doGenericBuild
    echoNotVerbose "Build Couchbase actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "Build Couchbase actions"
    echoVerbose "+====================================================="
    initCreateDefaultDirectoryStructure
}

# function executed when post-build hook is called
function couchbasePostBuild {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Couchbase POST-BUILD"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Couchbase POST-BUILD"
    echoVerbose "| "
    couchbaseInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doCouchbasePostBuild
    if [[ -x $MYS2I_DEST/assemble ]]; then
        echoVerbose "PostBuild source code found at $MYS2I_DEST/post-build"
        testAndRunSourceCodeScript "post-build" 
    else
        echoVerbose "No PostBuild source code found at $MYS2I_DEST/post-build"
    fi
    exit 0;
}

# function performing Couchbase post-build actions
function doCouchbasePostBuild {
    doGenericPostBuild
    echoNotVerbose "PostBuild Couchbase actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "PostBuild Couchbase actions"
    echoVerbose "+====================================================="
}

# function executed when pre-deploy hook is called
function couchbasePreDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Couchbase PRE-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Couchbase PRE-DEPLOY"
    echoVerbose "| "
    couchbaseInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doCouchbasePreDeploy
    if [[ -x $MYS2I_DEST/pre-deploy ]]; then
        echoVerbose "PreDeploy source code found at $MYS2I_DEST/pre-deploy"
        testAndRunSourceCodeScript "pre-deploy" 
    else
        echoVerbose "No PreDeploy source code found at $MYS2I_DEST/pre-deploy"
    fi
    exit 0;
}

# function performing Couchbase pre-deploy actions
function doCouchbasePreDeploy {
    doGenericPreDeploy
    echoNotVerbose "PreDeploy Couchbase actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "PreDeploy Couchbase actions"
    echoVerbose "+====================================================="
}

# function executed when post-deploy hook is called
function couchbasePostDeploy {
    genericHeader
    echoNotVerbose "container $HOSTNAME executing Couchbase POST-DEPLOY"
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME executing Couchbase POST-DEPLOY"
    echoVerbose "| "
    couchbaseInformation "| "
    echoDebug `env`
    echoVerbose "+====================================================="
    doCouchbasePostDeploy
    if [[ -x $MYS2I_DEST/post-deploy ]]; then
        echoVerbose "PostDeploy source code found at $MYS2I_DEST/post-deploy"
        testAndRunSourceCodeScript "post-deploy" 
    else
        echoVerbose "No PostDeploy source code found at $MYS2I_DEST/post-deploy"
    fi
    exit 0;
}

# function performing Couchbase post-deploy actions
function doCouchbasePostDeploy {
    doGenericPostDeploy
    echoNotVerbose "PostDeploy Couchbase actions"
    echoVerbose ""
    echoVerbose "+====================================================="
    echoVerbose "PostDeploy Couchbase actions"
    echoVerbose "+====================================================="
}

function couchbaseRun {
    genericHeader
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME is RUNNING"
    echoNotVerbose "container $HOSTNAME is RUNNING"
    echoVerbose "| "
    couchbaseInformation "| "
    echoVerbose "+====================================================="
    if [[ -x $MYS2I_DEST/run ]]; then
        echoVerbose "Run source code found at $MYS2I_DEST/run"
        testAndRunSourceCodeScript "run" 
    else
        echoVerbose "No Run source code found at $MYS2I_DEST/run"
        echoVerbose "Executing default Couchbase run action"
        startCouchbaseService
    fi
}

# Display liveness status
function couchbaseIsLive {
    genericIsLive
}

# Display readyness status
function couchbaseIsReady {
    genericIsReady
}

function stop_couchbase_handler {
    /opt/couchbase/bin/couchbase-server -k
    echoVerbose "+====================================================="
    echoVerbose "| Container $HOSTNAME is now STOPPED"
    echoNotVerbose "container is now stopped"
    echoVerbose "| "
    couchbaseInformation "| "
    echoVerbose "+====================================================="
    exit 143; # 128 + 15 -- SIGTERM
}

# Start the couchbase server as a deamon and execute it inside 
# the running shell
function startCouchbaseService {
    exec 2>&1
    cd $DATA_PATH
    initCreateDefaultDirectoryStructure
    trap 'stop_couchbase_handler;' SIGHUP SIGINT SIGQUIT SIGTERM SIGKILL SIGSTOP SIGCONT
    exec /opt/couchbase/bin/couchbase-server -- -kernel global_enable_tracing false -noinput
    sleep 10
}


function initCreateDefaultDirectoryStructure {
    if [[ ! -d $DATA_PATH/lib/couchbase ]]; then
        echoVerbose "Creating basic data structure in $DATA_PATH"
        mkdir -p $DATA_PATH/lib/couchbase/config \
                 $DATA_PATH/lib/couchbase/data \
                 $DATA_PATH/lib/couchbase/stats \
                 $DATA_PATH/lib/couchbase/logs \
                 $DATA_PATH/lib/moxi
        touch $DATA_PATH/.keep
    fi
    chown -R couchbase:0 $DATA_PATH 2&> /dev/null
    chmod -R g=u $DATA_PATH 2&> /dev/null
}
