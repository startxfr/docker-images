kind: Template
apiVersion: v1
metadata:
  name: startx-app-awx-template
  annotations:
    openshift.io/display-name: Startx AWX Server (centos)
    description: AWX server for automation management
    iconClass: icon-gear
    tags: startx,awx,postgres,memcached,rabitmq,ansible
    openshift.io/long-description:
      This template provides an AWX infrastructure using
      public images. Ready to use in openshift with a simple deployement config. For
      more information about using this image, including OpenShift considerations,
      see https://gitlab.com/startx1/containers/blob/master/README.md.
    openshift.io/provider-display-name: STARTX
    openshift.io/documentation-url: https://gitlab.com/startx1/containers/blob/master/README.md
    openshift.io/support-url: https://gitlab.com/startx1/containers/issues/new
message:
  "The following container have been created in your project: ${APP_NAME} and
  you can use openshift console to log into."
labels:
  template: startx-app-awx-template
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${APP_NAME}"
      annotations:
        openshift.io/display-name: Startx AWX Based images
        openshift.io/generated-by: STARTX
      labels:
        base-image: startx-app-awx
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
    spec:
      tags:
        - name: postgres
          annotations:
            openshift.io/display-name: AWX Postgres backend (version 9.6)
            description: Postgres backend used in STARTX AWX infrastructure
            iconClass: icon-postgres
            tags: startx,backend,database,postgres,awx
            supports: postgres
            version: "9.6"
          from:
            kind: DockerImage
            name: postgres:9.6
        - name: rabbitmq
          annotations:
            openshift.io/display-name: AWX RabbitMQ backend (version 3)
            description: RabbitMQ backend used in STARTX AWX infrastructure
            iconClass: icon-rabbitmq
            tags: startx,backend,database,rabbitmq,awx
            supports: rabbitmq
            version: "3"
          from:
            kind: DockerImage
            name: rabbitmq:3
        - name: memcached
          annotations:
            openshift.io/display-name: AWX Memcached backend (alpine version)
            description: Memcached backend used in STARTX AWX infrastructure
            iconClass: icon-memcached
            tags: startx,backend,database,memcached,awx
            supports: memcached
            version: alpine
          from:
            kind: DockerImage
            name: memcached:alpine
        - name: awx_task
          annotations:
            openshift.io/display-name: AWX Task backend (latest)
            description: AWX Task backend for STARTX AWX infrastructure
            iconClass: icon-httpd
            tags: startx,http,api,awx_task,awx
            supports: http
            version: awx_task
          from:
            kind: DockerImage
            name: ansible/awx_task:latest
        - name: awx_web
          annotations:
            openshift.io/display-name: AWX Web frontend (latest)
            description: AWX Web frontend for STARTX AWX infrastructure
            iconClass: icon-httpd
            tags: startx,http,api,awx_web,awx
            supports: http
            version: awx_web
          from:
            kind: DockerImage
            name: ansible/awx_web:latest
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-awx"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        template.openshift.io/expose-secretkey: "{.data['secretkey']}"
    stringData:
      secretkey: "${SECRET_KEY}"
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-rabbitmq"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        template.openshift.io/expose-username: "{.data['user']}"
        template.openshift.io/expose-password: "{.data['password']}"
    stringData:
      user: "${RABBITMQ_USER}"
      password: "${RABBITMQ_PASSWORD}"
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-postgres"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        template.openshift.io/expose-username: "{.data['user']}"
        template.openshift.io/expose-password: "{.data['password']}"
        template.openshift.io/expose-database: "{.data['database']}"
    stringData:
      user: "${POSTGRES_USER}"
      password: "${POSTGRES_PASSWORD}"
      database: "${POSTGRES_DB}"
      host: postgres
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-postgres"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      strategy:
        type: Recreate
        recreateParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 120
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-postgres"
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:postgres"
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-postgres"
      template:
        metadata:
          labels:
            app: "${APP_NAME}"
            type: "${APP_TYPE}"
            provider: startx
            template: startx-app-awx-template
            deploymentconfig: "${APP_NAME}-postgres"
          annotations:
            openshift.io/generated-by: STARTX
        spec:
          containers:
            - name: "${APP_NAME}-postgres"
              image: " "
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: user
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: password
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: database
              livenessProbe:
                exec:
                  command:
                    - psql
                    - "-h"
                    - "$POSTGRES_DB"
                    - "-p"
                    - "5432"
                    - "'SELECT 1;'"
                initialDelaySeconds: 5
                timeoutSeconds: 2
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                exec:
                  command:
                    - psql
                    - "-h"
                    - "$POSTGRES_DB"
                    - "-p"
                    - "5432"
                    - "'SELECT 1;'"
                initialDelaySeconds: 2
                timeoutSeconds: 2
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: Always
              volumeMounts:
                - name: "${APP_NAME}-postgres-data"
                  mountPath: "/var/lib/postgresql/data"
          volumes:
            - name: "${APP_NAME}-postgres-data"
              emptyDir:
                medium: ""
          restartPolicy: Always
          dnsPolicy: ClusterFirst
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-rabbitmq"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      strategy:
        type: Recreate
        recreateParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 120
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-rabbitmq"
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:rabbitmq"
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-rabbitmq"
      template:
        metadata:
          labels:
            app: "${APP_NAME}"
            type: "${APP_TYPE}"
            provider: startx
            template: startx-app-awx-template
            deploymentconfig: "${APP_NAME}-rabbitmq"
          annotations:
            openshift.io/generated-by: STARTX
        spec:
          containers:
            - name: "${APP_NAME}-rabbitmq"
              image: " "
              ports:
                - containerPort: 5672
                  protocol: TCP
              env:
                - name: RABBITMQ_DEFAULT_VHOST
                  value: awx
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: Always
              volumeMounts:
                - name: "${APP_NAME}-rabbitmq-data"
                  mountPath: "/var/lib/rabbitmq"
          volumes:
            - name: "${APP_NAME}-rabbitmq-data"
              emptyDir:
                medium: ""
          restartPolicy: Always
          dnsPolicy: ClusterFirst
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-memcached"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      strategy:
        type: Recreate
        recreateParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 120
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-memcached"
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:memcached"
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-memcached"
      template:
        metadata:
          labels:
            app: "${APP_NAME}"
            type: "${APP_TYPE}"
            provider: startx
            template: startx-app-awx-template
            deploymentconfig: "${APP_NAME}-memcached"
          annotations:
            openshift.io/generated-by: STARTX
        spec:
          containers:
            - name: "${APP_NAME}-memcached"
              image: " "
              ports:
                - containerPort: 11211
                  protocol: TCP
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: Always
          restartPolicy: Always
          dnsPolicy: ClusterFirst
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-awx_task"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      strategy:
        type: Recreate
        recreateParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 120
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-awx_task"
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:awx_task"
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-awx_task"
      template:
        metadata:
          labels:
            app: "${APP_NAME}"
            type: "${APP_TYPE}"
            provider: startx
            template: startx-app-awx-template
            deploymentconfig: "${APP_NAME}-awx_task"
          annotations:
            openshift.io/generated-by: STARTX
        spec:
          containers:
            - name: "${APP_NAME}-awx_task"
              image: " "
              env:
                - name: SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-awx"
                      key: secretkey
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: password
                - name: DATABASE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: database
                - name: DATABASE_PORT
                  value: 5432
                - name: DATABASE_HOST
                  value: "${APP_NAME}-postgres"
                - name: RABBITMQ_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-rabbitmq"
                      key: user
                - name: RABBITMQ_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-rabbitmq"
                      key: password
                - name: RABBITMQ_HOST
                  value: "${APP_NAME}-rabbitmq"
                - name: RABBITMQ_PORT
                  value: 5672
                - name: RABBITMQ_VHOST
                  value: awx
                - name: MEMCACHED_HOST
                  value: "${APP_NAME}-memcached"
                - name: MEMCACHED_PORT
                  value: 11211
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: Always
          restartPolicy: Always
          dnsPolicy: ClusterFirst
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-awx_web"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      strategy:
        type: Recreate
        recreateParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 120
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-awx_web"
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:awx_web"
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-awx_web"
      template:
        metadata:
          labels:
            app: "${APP_NAME}"
            type: "${APP_TYPE}"
            provider: startx
            template: startx-app-awx-template
            deploymentconfig: "${APP_NAME}-awx_web"
          annotations:
            openshift.io/generated-by: STARTX
        spec:
          containers:
            - name: "${APP_NAME}-awx_web"
              image: " "
              ports:
                - containerPort: 8052
                  protocol: TCP
              env:
                - name: SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-awx"
                      key: secretkey
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: password
                - name: DATABASE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-postgres"
                      key: database
                - name: DATABASE_PORT
                  value: 5432
                - name: DATABASE_HOST
                  value: "${APP_NAME}-postgres"
                - name: RABBITMQ_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-rabbitmq"
                      key: user
                - name: RABBITMQ_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-rabbitmq"
                      key: password
                - name: RABBITMQ_HOST
                  value: "${APP_NAME}-rabbitmq"
                - name: RABBITMQ_PORT
                  value: 5672
                - name: RABBITMQ_VHOST
                  value: awx
                - name: MEMCACHED_HOST
                  value: "${APP_NAME}-memcached"
                - name: MEMCACHED_PORT
                  value: 11211
                - name: HOSTNAME
                  value: awxweb
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: Always
          restartPolicy: Always
          dnsPolicy: ClusterFirst
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-postgres"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.openshift.io/expose-uri: pgsql://{.spec.clusterIP}:{.spec.ports[?(.name=="postgres")].port}
    spec:
      ports:
        - name: postgres
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-postgres"
      type: ClusterIP
      sessionAffinity: None
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-rabbitmq"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.openshift.io/expose-uri: rabbitmq://{.spec.clusterIP}:{.spec.ports[?(.name=="rabbitmq")].port}
    spec:
      ports:
        - name: rabbitmq
          protocol: TCP
          port: 5672
          targetPort: 5672
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-rabbitmq"
      type: ClusterIP
      sessionAffinity: None
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-memcached"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
        template.openshift.io/expose-uri: memcached://{.spec.clusterIP}:{.spec.ports[?(.name=="memcached")].port}
    spec:
      ports:
        - name: memcached
          protocol: TCP
          port: 11211
          targetPort: 11211
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-memcached"
      type: ClusterIP
      sessionAffinity: None
  - kind: Service
    apiVersion: v1
    metadata:
      name: awxweb
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
    spec:
      ports:
        - name: http
          protocol: TCP
          port: 8052
          targetPort: 8052
      selector:
        app: "${APP_NAME}"
        deploymentconfig: "${APP_NAME}-awx_web"
      type: ClusterIP
      sessionAffinity: None
  - kind: Route
    apiVersion: v1
    metadata:
      name: "${APP_NAME}"
      labels:
        app: "${APP_NAME}"
        type: "${APP_TYPE}"
        provider: startx
        template: startx-app-awx-template
      annotations:
        openshift.io/generated-by: STARTX
    spec:
      to:
        kind: Service
        name: awxweb
        weight: 100
parameters:
  - name: APP_NAME
    displayName: Application name
    description: The name of the created application
    value: awx
    required: true
  - name: APP_TYPE
    displayName: Application type
    description: The type of the created application
    value: application
  - name: SECRET_KEY
    displayName: AWX secret key
    description: Secret key used by tasks and web to authenticate using API
    generate: expression
    from: "[a-zA-Z0-9]{12}"
    required: true
  - name: RABBITMQ_USER
    displayName: RabbitMQ user name
    description: The RabbitMQ user name to use for messaging authentification
    value: guest
    required: true
  - name: RABBITMQ_PASSWORD
    displayName: RabbitMQ password
    description: The RabbitMQ password coresponding to the user
    value: guest
    required: true
  - name: POSTGRES_USER
    displayName: PostgresQL user name
    description: The PostgresQL user name to use for database authentification
    value: awx
    required: true
  - name: POSTGRES_PASSWORD
    displayName: PostgresQL password
    description: The PostgresQL password coresponding to the user
    value: awxpass
    required: true
  - name: POSTGRES_DB
    displayName: AWX postgres database
    description: The PostgresQL database to use for storing AWX objects
    value: awx
    required: true
